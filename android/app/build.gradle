plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 34
    namespace "com.peguim.seringueiro"
    defaultConfig {
        applicationId "com.peguim.seringueiro"
        minSdkVersion 20 // Substitua 20 pela versão mínima desejada do SDK do Android
        targetSdkVersion 33 // Substitua 31 pela versão desejada do SDK do Android
        versionCode 4
        versionName "1.1.0"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            // Outras configurações para o build de release, se necessário
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation "com.google.code.gson:gson:$gson_version"
    implementation platform('com.google.firebase:firebase-bom:29.0.3') // Firebase BOM
    implementation 'com.google.firebase:firebase-firestore' // Firebase Firestore
    implementation 'com.google.firebase:firebase-auth'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.8.0'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation("com.google.firebase:firebase-appcheck-debug")





}

kapt {
    correctErrorTypes = true
}